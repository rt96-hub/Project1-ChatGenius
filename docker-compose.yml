version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      args:
        - NEXT_PUBLIC_AUTH0_DOMAIN=${NEXT_PUBLIC_AUTH0_DOMAIN}
        - NEXT_PUBLIC_AUTH0_CLIENT_ID=${NEXT_PUBLIC_AUTH0_CLIENT_ID}
        - NEXT_PUBLIC_AUTH0_AUDIENCE=${NEXT_PUBLIC_AUTH0_AUDIENCE}
        - NEXT_PUBLIC_API_URL=https://${EC2_PUBLIC_DNS}/api
        - NEXT_PUBLIC_WS_URL=wss://${EC2_PUBLIC_DNS}/api
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=https://${EC2_PUBLIC_DNS}:8000
      - NEXT_PUBLIC_WS_URL=wss://${EC2_PUBLIC_DNS}:8000
      - NEXT_PUBLIC_AUTH0_DOMAIN=${NEXT_PUBLIC_AUTH0_DOMAIN}
      - NEXT_PUBLIC_AUTH0_CLIENT_ID=${NEXT_PUBLIC_AUTH0_CLIENT_ID}
      - NEXT_PUBLIC_AUTH0_AUDIENCE=${NEXT_PUBLIC_AUTH0_AUDIENCE}
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DB_URL=postgresql://postgres:postgres@db:5432/chatapp
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_API_IDENTIFIER=${AUTH0_API_IDENTIFIER}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
    depends_on:
      - db

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=chatapp
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: